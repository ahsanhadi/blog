Timing is on.
 ps_partkey | value 
------------+-------
(0 rows)

Time: 14041.959 ms (00:14.042)
                                                                                              QUERY PLAN                                                                                               
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=80784.11..80784.11 rows=1 width=40) (actual time=617.810..617.810 rows=0 loops=1)
   Output: partsupp.ps_partkey, (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
   Buffers: shared hit=659095
   InitPlan 1 (returns $2)
     ->  Finalize Aggregate  (cost=17049.30..17049.31 rows=1 width=32) (actual time=196.156..196.156 rows=1 loops=1)
           Output: (sum((partsupp_1.ps_supplycost * (partsupp_1.ps_availqty)::numeric)) * 0.0001000000)
           Buffers: shared hit=329763
           ->  Gather  (cost=17049.18..17049.29 rows=1 width=32) (actual time=196.149..196.198 rows=2 loops=1)
                 Output: (PARTIAL sum((partsupp_1.ps_supplycost * (partsupp_1.ps_availqty)::numeric)))
                 Workers Planned: 1
                 Workers Launched: 1
                 Buffers: shared hit=329763
                 ->  Partial Aggregate  (cost=16049.18..16049.19 rows=1 width=32) (actual time=194.508..194.508 rows=1 loops=2)
                       Output: PARTIAL sum((partsupp_1.ps_supplycost * (partsupp_1.ps_availqty)::numeric))
                       Buffers: shared hit=329763
                       Worker 0: actual time=193.102..193.102 rows=1 loops=1
                         Buffers: shared hit=94184
                       ->  Nested Loop  (cost=1.76..14637.70 rows=188197 width=10) (actual time=0.114..163.310 rows=157360 loops=2)
                             Output: partsupp_1.ps_supplycost, partsupp_1.ps_availqty
                             Buffers: shared hit=329763
                             Worker 0: actual time=0.178..174.898 rows=89840 loops=1
                               Buffers: shared hit=94184
                             ->  Hash Join  (cost=1.32..3068.15 rows=2353 width=4) (actual time=0.082..8.870 rows=1967 loops=2)
                                   Output: supplier_1.s_suppkey
                                   Inner Unique: true
                                   Hash Cond: (supplier_1.s_nationkey = nation_1.n_nationkey)
                                   Buffers: shared hit=2333
                                   Worker 0: actual time=0.127..7.154 rows=1123 loops=1
                                     Buffers: shared hit=706
                                   ->  Parallel Seq Scan on public.supplier supplier_1  (cost=0.00..2886.24 rows=58824 width=12) (actual time=0.006..4.940 rows=50000 loops=2)
                                         Output: supplier_1.s_suppkey, supplier_1.s_name, supplier_1.s_address, supplier_1.s_nationkey, supplier_1.s_phone, supplier_1.s_acctbal, supplier_1.s_comment
                                         Buffers: shared hit=2298
                                         Worker 0: actual time=0.009..4.663 rows=29234 loops=1
                                           Buffers: shared hit=672
                                   ->  Hash  (cost=1.31..1.31 rows=1 width=4) (actual time=0.023..0.023 rows=1 loops=2)
                                         Output: nation_1.n_nationkey
                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                         Buffers: shared hit=2
                                         Worker 0: actual time=0.022..0.023 rows=1 loops=1
                                           Buffers: shared hit=1
                                         ->  Seq Scan on public.nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.020 rows=1 loops=2)
                                               Output: nation_1.n_nationkey
                                               Filter: (nation_1.n_name = 'ALGERIA'::bpchar)
                                               Rows Removed by Filter: 24
                                               Buffers: shared hit=2
                                               Worker 0: actual time=0.017..0.020 rows=1 loops=1
                                                 Buffers: shared hit=1
                             ->  Index Scan using idx_partsupp_suppkey on public.partsupp partsupp_1  (cost=0.43..4.11 rows=81 width=18) (actual time=0.004..0.072 rows=80 loops=3934)
                                   Output: partsupp_1.ps_partkey, partsupp_1.ps_suppkey, partsupp_1.ps_availqty, partsupp_1.ps_supplycost, partsupp_1.ps_comment
                                   Index Cond: (partsupp_1.ps_suppkey = supplier_1.s_suppkey)
                                   Buffers: shared hit=327430
                                   Worker 0: actual time=0.007..0.142 rows=80 loops=1123
                                     Buffers: shared hit=93478
   ->  Sort  (cost=63734.80..64001.41 rows=106645 width=40) (actual time=617.809..617.809 rows=0 loops=1)
         Output: partsupp.ps_partkey, (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)))
         Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
         Sort Method: quicksort  Memory: 25kB
         Buffers: shared hit=659095
         ->  GroupAggregate  (cost=51204.01..63201.57 rows=106645 width=40) (actual time=617.806..617.806 rows=0 loops=1)
               Output: partsupp.ps_partkey, sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))
               Group Key: partsupp.ps_partkey
               Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
               Rows Removed by Filter: 296720
               Buffers: shared hit=659095
               ->  Sort  (cost=51204.01..52003.85 rows=319935 width=18) (actual time=270.614..286.390 rows=314720 loops=1)
                     Output: partsupp.ps_partkey, partsupp.ps_supplycost, partsupp.ps_availqty
                     Sort Key: partsupp.ps_partkey
                     Sort Method: quicksort  Memory: 32150kB
                     Buffers: shared hit=329332
                     ->  Nested Loop  (cost=44.92..21950.08 rows=319935 width=18) (actual time=0.544..197.501 rows=314720 loops=1)
                           Output: partsupp.ps_partkey, partsupp.ps_supplycost, partsupp.ps_availqty
                           Buffers: shared hit=329332
                           ->  Nested Loop  (cost=44.49..2282.34 rows=4000 width=4) (actual time=0.538..3.108 rows=3934 loops=1)
                                 Output: supplier.s_suppkey
                                 Buffers: shared hit=1906
                                 ->  Seq Scan on public.nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.004..0.008 rows=1 loops=1)
                                       Output: nation.n_nationkey, nation.n_name, nation.n_regionkey, nation.n_comment
                                       Filter: (nation.n_name = 'ALGERIA'::bpchar)
                                       Rows Removed by Filter: 24
                                       Buffers: shared hit=1
                                 ->  Bitmap Heap Scan on public.supplier  (cost=44.49..2241.03 rows=4000 width=12) (actual time=0.532..2.625 rows=3934 loops=1)
                                       Output: supplier.s_suppkey, supplier.s_name, supplier.s_address, supplier.s_nationkey, supplier.s_phone, supplier.s_acctbal, supplier.s_comment
                                       Recheck Cond: (supplier.s_nationkey = nation.n_nationkey)
                                       Heap Blocks: exact=1893
                                       Buffers: shared hit=1905
                                       ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..43.49 rows=4000 width=0) (actual time=0.379..0.379 rows=3934 loops=1)
                                             Index Cond: (supplier.s_nationkey = nation.n_nationkey)
                                             Buffers: shared hit=12
                           ->  Index Scan using idx_partsupp_suppkey on public.partsupp  (cost=0.43..4.11 rows=81 width=26) (actual time=0.003..0.043 rows=80 loops=3934)
                                 Output: partsupp.ps_partkey, partsupp.ps_suppkey, partsupp.ps_availqty, partsupp.ps_supplycost, partsupp.ps_comment
                                 Index Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                 Buffers: shared hit=327426
 Planning Time: 0.447 ms
 Execution Time: 621.056 ms
(94 rows)

Time: 623.216 ms
 ps_partkey | value 
------------+-------
(0 rows)

Time: 556.554 ms
